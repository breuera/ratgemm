libxsmm_truncate_convert_f32_bf16
libxsmm_convert_bf16_f32
subtraction
libxsmm_rne_convert_fp32_bf16
libxsmm_convert_bf16_f32
---------------------------------------------------------
input:             1 10000001 0010000 0010100110110011
first_half_bf16:   1 10000001 0010000
first_half_fp32:   1 10000001 0010000 0000000000000000
second_half_input: 1 01110111 0100110 1011110000000001
second_half_bf16:  1 01110111 0100111
second_half_fp32:  1 01110111 0100111 0000000000001010 //!
output:            1 10000001 0010000 0010100111000111
---------------------------------------------------------
input:  9.42838    0 10000010 0010110 1101101010100101
first_half_bf16:   0 00000000 0000000 0000000000000000
first_half_fp32:   0 10000010 0010110 0000000000000000
second_half_input: 0 01111010 10110101001111111110100
second_half_bf16:  0 10000001 1101110
second_half_fp32:  0 01111010 1011011 0000000000000001 //!
output:            0 10000010 0010110 1101101100000011
---------------------------------------------------------
input:  4.98248    0 10000001 0011111 0111000001111010
first_half_bf16:   0 10000001 1001110
first_half_fp32:   0 10000001 0011111 0000000000000000
second_half_input: 0 01111000 1100000 1110101111010011
second_half_bf16:  0 01110110 1101011
second_half_fp32:  0 01111000 1100000 1111111111110101 //!
output:            0 10000001 0011111 0111000001111010
---------------------------------------------------------
libxsmm_truncate_convert_f32_bf16
libxsmm_convert_bf16_f32
subtraction
libxsmm_truncate_convert_f32_bf16
libxsmm_convert_bf16_f32
---------------------------------------------------------
input:  4.98248    0 10000001 0011111 0111000001111010    
first_half_bf16:   0 10000001 1001110
first_half_fp32:   0 10000001 0011111 0000000000000000
second_half_input: 0 01111000 1100000 1110101111010011
second_half_bf16:  0 01110110 1101011
second_half_fp32:  0 01111000 1100000 0000000000011011 //!
output:            0 10000001 0011111 0110111111111100
---------------------------------------------------------
input:        
first_half_bf16: 
first_half_fp32: 
second_half_input: 
second_half_bf16: 
second_half_fp32: 
output: 